{"id":"../../node_modules/axios/lib/core/InterceptorManager.js","dependencies":[{"name":"C:\\Users\\razin\\Desktop\\touradesertv2\\package.json","includedInParent":true,"mtime":1595882234824},{"name":"C:\\Users\\razin\\Desktop\\touradesertv2\\node_modules\\axios\\package.json","includedInParent":true,"mtime":1593966890208},{"name":"./../utils","loc":{"line":3,"column":20},"parent":"C:\\Users\\razin\\Desktop\\touradesertv2\\node_modules\\axios\\lib\\core\\InterceptorManager.js","resolved":"C:\\Users\\razin\\Desktop\\touradesertv2\\node_modules\\axios\\lib\\utils.js"}],"generated":{"js":"'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n"},"sourceMaps":null,"error":null,"hash":"13869e99a6b5c2c1b1915b6c0976c2dc","cacheData":{"env":{}}}