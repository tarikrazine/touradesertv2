{"id":"../../node_modules/alert/node.js","dependencies":[{"name":"C:\\Users\\razin\\Desktop\\touradesertv2\\package.json","includedInParent":true,"mtime":1593967297317},{"name":"C:\\Users\\razin\\Desktop\\touradesertv2\\node_modules\\alert\\package.json","includedInParent":true,"mtime":1593967295750},{"name":"child_process","loc":{"line":1,"column":36},"parent":"C:\\Users\\razin\\Desktop\\touradesertv2\\node_modules\\alert\\node.js","resolved":"C:\\Users\\razin\\Desktop\\touradesertv2\\node_modules\\parcel-bundler\\src\\builtins\\_empty.js"},{"name":"path","loc":{"line":3,"column":25},"parent":"C:\\Users\\razin\\Desktop\\touradesertv2\\node_modules\\alert\\node.js","resolved":"C:\\Users\\razin\\Desktop\\touradesertv2\\node_modules\\path-browserify\\index.js"},{"name":"is-program-installed","loc":{"line":4,"column":35},"parent":"C:\\Users\\razin\\Desktop\\touradesertv2\\node_modules\\alert\\node.js","resolved":"C:\\Users\\razin\\Desktop\\touradesertv2\\node_modules\\is-program-installed\\index.js"},{"name":"process","parent":"C:\\Users\\razin\\Desktop\\touradesertv2\\node_modules\\alert\\node.js","resolved":"C:\\Users\\razin\\Desktop\\touradesertv2\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\nvar __dirname = \"C:\\\\Users\\\\razin\\\\Desktop\\\\touradesertv2\\\\node_modules\\\\alert\";\nconst {\n  execSync,\n  spawn\n} = require('child_process');\n\nconst {\n  platform\n} = process;\n\nconst {\n  join\n} = require('path');\n\nconst isProgramInstalled = require('is-program-installed');\n\nconst windowsScript = join(__dirname, 'msgbox.vbs');\n\nconst execCmd = cmds => spawn(cmds[0], cmds.splice(1));\n\nconst unixPrograms = ['kdialog', 'zenity', 'yad', 'notify-send', 'xmessage', 'dialog', 'whiptail'];\nconst bestUnixProgram = unixPrograms.filter(isProgramInstalled)[0] || console.log;\n\nconst cscript = s => ['cscript', windowsScript, s];\n\nconst msg = str => ['msg', '\"%username%\"', str];\n\nconst zenity = s => ['zenity', '--info', '--text', s];\n\nconst yad = s => ['yad', '--text', s, '--button', 'OK'];\n\nconst notifySend = s => ['notify-send', s];\n\nconst xmessage = s => ['xmessage', s];\n\nconst dialog = s => ['dialog', '--msgbox', s, '10', '30'];\n\nconst whiptail = s => ['whiptail', '--msbox', s, '10', '30'];\n\nconst kdialog = s => ['kdialog', '--msgbox', s];\n\nconst osascript = s => ['osascript', '-e', `tell app \"System Events\" to display dialog \"${s}\" buttons \"OK\"`];\n\nconst hasCscript = platform.startsWith('win') && (() => {\n  try {\n    execSync('cscript');\n    return true;\n  } catch {\n    return false;\n  }\n})();\n\nconst nameMap = {\n  console: console.log,\n  cscript,\n  dialog,\n  kdialog,\n  msg,\n  'notify-send': notifySend,\n  osascript,\n  whiptail,\n  xmessage,\n  yad,\n  zenity\n};\n\nconst getAlert = (input = '', thingToUse = '') => {\n  const execInput = cmd => execCmd(cmd(input));\n\n  const pickFromNameMap = (option = bestUnixProgram) => {\n    if (option !== 'console') {\n      if (nameMap[option]) {\n        return execInput(nameMap[option]);\n      }\n    }\n\n    return console.log(input);\n  };\n\n  if (thingToUse) {\n    return pickFromNameMap(thingToUse);\n  }\n\n  switch (platform) {\n    case 'linux':\n    case 'freebsd':\n    case 'sunos':\n      return pickFromNameMap(bestUnixProgram);\n\n    case 'darwin':\n      return execInput(osascript);\n\n    case 'win32':\n      return hasCscript ? execInput(cscript) : execInput(msg);\n\n    default:\n      return console.log(input);\n  }\n};\n\nmodule.exports = undefined !== '1' ? getAlert : () => {};"},"sourceMaps":null,"error":null,"hash":"8e021c9f3a8c0e04952d1705a57ca3cd","cacheData":{"env":{}}}